{"ast":null,"code":"var _jsxFileName = \"/home/cris/Documentos/proyectos-adalab/EJERCICIOS/modulo3-react/ev.final/m3-evaluacion-final-cristinatato/src/components/CharacterDetail.js\";\nimport React from 'react';\nimport './CharacterDetail.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n  const data = props.data,\n        routerProps = props.routerProps;\n  const characId = parseInt(routerProps.match.params.id);\n  const character = data.filter(item => item.id === characId);\n\n  if (characId > data.length) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"La p\\xE1gina de detalle que est\\xE1s buscando no existe o no est\\xE1 disponible\"), React.createElement(Link, {\n      to: \"/\",\n      className: \"app__back\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Vuelve al la p\\xE1gina principal\"));\n  }\n\n  if (character[0]) {\n    const _character$ = character[0],\n          name = _character$.name,\n          image = _character$.image,\n          species = _character$.species,\n          status = _character$.status,\n          origin = _character$.origin,\n          episode = _character$.episode;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container__card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img__container-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img__detail\",\n      src: image,\n      alt: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"container__details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"name__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, name), React.createElement(\"p\", {\n      className: \"specie__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Specie: \", React.createElement(\"i\", {\n      className: species === 'Human' ? \"fas fa-male\" : \"fab fa-reddit-alien\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"status__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Status: \", React.createElement(\"i\", {\n      className: status === 'Alive' ? \"fas fa-heartbeat\" : \"fas fa-skull-crossbones\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"origin__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Origin: \", origin.name ? origin.name : 'Unknown'), React.createElement(\"p\", {\n      className: \"episodes__detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Episodes: \", episode.length ? episode.length : 'Unknown')), React.createElement(Link, {\n      className: \"link\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \"Back\"))));\n  } else {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"No hay m\\xE1s personajes\"), React.createElement(Link, {\n      className: \"link\",\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Back\"));\n  }\n};\n\nCharacterDetail.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default CharacterDetail;","map":{"version":3,"sources":["/home/cris/Documentos/proyectos-adalab/EJERCICIOS/modulo3-react/ev.final/m3-evaluacion-final-cristinatato/src/components/CharacterDetail.js"],"names":["React","PropTypes","Link","CharacterDetail","props","data","routerProps","characId","parseInt","match","params","id","character","filter","item","length","name","image","species","status","origin","episode","propTypes","arrayOf","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './CharacterDetail.scss';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n    const { data, routerProps } = props;\n    const characId = parseInt(routerProps.match.params.id);\n    const character = data.filter(item => item.id === characId);\n\n    if (characId > data.length) {\n        return (\n            <div>\n                <p>La p치gina de detalle que est치s buscando no existe o no est치 disponible</p>\n                <Link to=\"/\" className=\"app__back\">Vuelve al la p치gina principal</Link>\n            </div>\n        );\n    }\n\n    if (character[0]) {\n        const { name, image, species, status, origin, episode } = character[0];\n        return (\n            <React.Fragment>\n                <div className=\"container__detail\">\n                    <div className=\"container__card\">\n                        <div className=\"img__container-detail\">\n                            <img className=\"img__detail\" src={image} alt={name} />\n                        </div>\n                        <div className=\"container__details\">\n                        <h2 className=\"name__detail\">{name}</h2>\n                        <p className=\"specie__detail\">Specie: <i className={species === 'Human' ? \"fas fa-male\" :\n                            \"fab fa-reddit-alien\"}></i></p>\n                        <p className=\"status__detail\">Status: <i className={status === 'Alive' ? \"fas fa-heartbeat\" : \"fas fa-skull-crossbones\"}></i></p>\n                        <p className=\"origin__detail\">Origin: {origin.name ? origin.name : 'Unknown'}</p>\n                        <p className=\"episodes__detail\">Episodes: {episode.length ? episode.length : 'Unknown'}</p>\n                        </div>\n                        <Link className=\"link\" to=\"/\"><i className=\"fas fa-arrow-left\"></i>Back</Link>\n                      \n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    } else {\n        return (\n            <React.Fragment>\n                <p>No hay m치s personajes</p>\n                <Link className=\"link\" to=\"/\">Back</Link>\n            </React.Fragment>\n        );\n    }\n\n};\n\n\nCharacterDetail.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\n}\nexport default CharacterDetail;"]},"metadata":{},"sourceType":"module"}